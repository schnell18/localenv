# Root logger
rootLogger.level = INFO
rootLogger.appenderRef.stdout.ref = stdout
rootLogger.appenderRef.kafka.ref = kafkaAppender

# Console appender
appender.stdout.type = Console
appender.stdout.name = stdout
appender.stdout.layout.type = PatternLayout
appender.stdout.layout.pattern = [%d] %p %m (%c)%n

# Kafka server appender
appender.kafkaAppender.type = RollingFile
appender.kafkaAppender.name = kafkaAppender
appender.kafkaAppender.fileName = ${kafka.logs.dir}/server.log
appender.kafkaAppender.filePattern = ${kafka.logs.dir}/server.log.%d{yyyy-MM-dd-HH}
appender.kafkaAppender.layout.type = PatternLayout
appender.kafkaAppender.layout.pattern = [%d] %p %m (%c)%n
appender.kafkaAppender.policies.type = Policies
appender.kafkaAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.kafkaAppender.policies.time.interval = 1
appender.kafkaAppender.policies.time.modulate = true

# State change appender
appender.stateChangeAppender.type = RollingFile
appender.stateChangeAppender.name = stateChangeAppender
appender.stateChangeAppender.fileName = ${kafka.logs.dir}/state-change.log
appender.stateChangeAppender.filePattern = ${kafka.logs.dir}/state-change.log.%d{yyyy-MM-dd-HH}
appender.stateChangeAppender.layout.type = PatternLayout
appender.stateChangeAppender.layout.pattern = [%d] %p %m (%c)%n
appender.stateChangeAppender.policies.type = Policies
appender.stateChangeAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.stateChangeAppender.policies.time.interval = 1
appender.stateChangeAppender.policies.time.modulate = true

# Request appender
appender.requestAppender.type = RollingFile
appender.requestAppender.name = requestAppender
appender.requestAppender.fileName = ${kafka.logs.dir}/kafka-request.log
appender.requestAppender.filePattern = ${kafka.logs.dir}/kafka-request.log.%d{yyyy-MM-dd-HH}
appender.requestAppender.layout.type = PatternLayout
appender.requestAppender.layout.pattern = [%d] %p %m (%c)%n
appender.requestAppender.policies.type = Policies
appender.requestAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.requestAppender.policies.time.interval = 1
appender.requestAppender.policies.time.modulate = true

# Cleaner appender
appender.cleanerAppender.type = RollingFile
appender.cleanerAppender.name = cleanerAppender
appender.cleanerAppender.fileName = ${kafka.logs.dir}/log-cleaner.log
appender.cleanerAppender.filePattern = ${kafka.logs.dir}/log-cleaner.log.%d{yyyy-MM-dd-HH}
appender.cleanerAppender.layout.type = PatternLayout
appender.cleanerAppender.layout.pattern = [%d] %p %m (%c)%n
appender.cleanerAppender.policies.type = Policies
appender.cleanerAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.cleanerAppender.policies.time.interval = 1
appender.cleanerAppender.policies.time.modulate = true

# Controller appender
appender.controllerAppender.type = RollingFile
appender.controllerAppender.name = controllerAppender
appender.controllerAppender.fileName = ${kafka.logs.dir}/controller.log
appender.controllerAppender.filePattern = ${kafka.logs.dir}/controller.log.%d{yyyy-MM-dd-HH}
appender.controllerAppender.layout.type = PatternLayout
appender.controllerAppender.layout.pattern = [%d] %p %m (%c)%n
appender.controllerAppender.policies.type = Policies
appender.controllerAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.controllerAppender.policies.time.interval = 1
appender.controllerAppender.policies.time.modulate = true

# Authorizer appender
appender.authorizerAppender.type = RollingFile
appender.authorizerAppender.name = authorizerAppender
appender.authorizerAppender.fileName = ${kafka.logs.dir}/kafka-authorizer.log
appender.authorizerAppender.filePattern = ${kafka.logs.dir}/kafka-authorizer.log.%d{yyyy-MM-dd-HH}
appender.authorizerAppender.layout.type = PatternLayout
appender.authorizerAppender.layout.pattern = [%d] %p %m (%c)%n
appender.authorizerAppender.policies.type = Policies
appender.authorizerAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.authorizerAppender.policies.time.interval = 1
appender.authorizerAppender.policies.time.modulate = true

# ZooKeeper logger
logger.zookeeper.name = org.apache.zookeeper
logger.zookeeper.level = INFO

# Kafka loggers
logger.kafka.name = kafka
logger.kafka.level = INFO

logger.kafkaApache.name = org.apache.kafka
logger.kafkaApache.level = INFO

# Request logger
logger.request.name = kafka.request.logger
logger.request.level = WARN
logger.request.appenderRef.requestAppender.ref = requestAppender
logger.request.additivity = false

# Network request channel logger
logger.networkRequest.name = kafka.network.RequestChannel$
logger.networkRequest.level = WARN
logger.networkRequest.appenderRef.requestAppender.ref = requestAppender
logger.networkRequest.additivity = false

# Controller logger
logger.controller.name = kafka.controller
logger.controller.level = TRACE
logger.controller.appenderRef.controllerAppender.ref = controllerAppender
logger.controller.additivity = false

# Log cleaner logger
logger.cleaner.name = kafka.log.LogCleaner
logger.cleaner.level = INFO
logger.cleaner.appenderRef.cleanerAppender.ref = cleanerAppender
logger.cleaner.additivity = false

# State change logger
logger.stateChange.name = state.change.logger
logger.stateChange.level = INFO
logger.stateChange.appenderRef.stateChangeAppender.ref = stateChangeAppender
logger.stateChange.additivity = false

# Authorizer logger
logger.authorizer.name = kafka.authorizer.logger
logger.authorizer.level = INFO
logger.authorizer.appenderRef.authorizerAppender.ref = authorizerAppender
logger.authorizer.additivity = false
