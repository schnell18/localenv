# dockerized virtual environment
version: '3.9'

services:

  postgresql:
    image: docker.io/schnell18/postgresql:17-alpine-1
    restart: always
    environment:
      POSTGRES_USER: localenv
      POSTGRES_PASSWORD: localenv
      POSTGRES_DB: localenv
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U localenv -d localenv"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
    labels:
      - "dbtype=PostgreSQL"
      - "database=true"
    volumes:
      - ../../:/work
      - ../../.state/postgresql/conf:/etc/postgresql/conf.d
      - ./provision/entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./provision/setup:/setup
      - ../../.state/postgresql/data:/var/lib/postgresql/data

  pgadmin:
    image: docker.io/schnell18/pgadmin:9.6.0-1
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localenv.local
      PGADMIN_DEFAULT_PASSWORD: localenv
      PGADMIN_DISABLE_POSTFIX: "true"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5050:80"
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - ../../.state/postgresql/pgadmin:/var/lib/pgadmin
      - ./provision/pgadmin/servers.json:/pgadmin4/servers.json
